<template>
  <view>
    <view class="picker-demo-title">basic-picker:</view>
    <cube-time-picker
      wx:ref="picker"
      min="{{ min }}"
      max="{{ max }}"
      show-now="{{ showNow }}"
      bindcolumnChange="onColumnChange"
      bindchange="onChange"
    />
    <view class="button-wrapper">
      <cube-button bindclick="getSelected">获取当前选中项</cube-button>
    </view>
    <view class="demo-data" wx:if="{{ selectedInfo.length || changeParams.length }}">
      <block wx:if="{{ selectedInfo.length }}">
        <view class="key">getSelectedInfo 事件返回值：</view>
        <view class="value">
          <view class="value-item" wx:for="{{selectedInfo}}" wx:key="index">
            <view class="item-key">{{item[0]}}</view>
            <view class="item-value">{{item[1]}}</view>
          </view>
        </view>
      </block>
      <block wx:if="{{ changeParams.length }}">
        <view class="key">change 事件参数：</view>
        <view class="value">
          <view class="value-item" wx:for="{{changeParams}}" wx:key="index">
            <view class="item-key">{{item[0]}}</view>
            <view class="item-value">{{item[1]}}</view>
          </view>
        </view>
      </block>
      <block wx:if="{{ changeParams.length }}">
        <view class="key">columnChange 事件参数：</view>
        <view class="value">
          <view wx:for="{{ columnChangeParams }}" wx:key="index">
            <view class="value-number">第{{ index+1 }}次：</view>
            <view class="value-item" wx:for={{item}} wx:for-item="itemChild" wx:key="twoIndex">
              <view class="item-key">{{itemChild[0]}}</view>
              <view class="item-value">{{itemChild[1]}}</view>
            </view>
          </view>
        </view>
      </block>
    </view>
  </view>
</template>

<script>
  import { createComponent } from '@mpxjs/core'
  let columnChangeArr = []
  createComponent({
    data: {
      min: Date.now() - 1 * 60 * 60 * 1000,
      max: Date.now() + 3 * 24 * 60 * 60 * 1000,
      showNow: true,
      columnChangeParams: [''],
      changeParams: '',
      selectedInfo: ''
    },
    methods: {
      onColumnChange(e) {
        columnChangeArr.push(Object.entries(e.detail))
      },
      onChange(e) {
        this.columnChangeParams = [...columnChangeArr]
        columnChangeArr = []
        this.changeParams = Object.entries(e.detail)
      },
      getSelected() {
        const info = this.$refs.picker.getSelectedInfo()
        this.selectedInfo = Object.entries(info)
      }
    }
  })
</script>

<style lang="stylus">
  .picker-demo-title
    margin-bottom 8px
</style>

<style lang="stylus" scoped>
.button-wrapper
  margin-top: 10px
.picker-demo-title
  margin-bottom 8px
.demo-data
  margin-top: 10px
  padding: 10px 10px
  background-color: white
  border: 1px solid  white
  border-radius: 10px

  .key
    margin-bottom: 10px
    font-size: 16px
  .key-introduce
    margin-bottom: 10px
    line-height: 20px
  .value
    margin-bottom: 20px
    white-space: break-spaces
    .value-number
      margin-top: 20px
    .value-item
      display flex
      justify-content: space-between
      height: 25px
      line-height: 25px
      font-size: 15px
      .item-value
        margin-left: 10px
        white-space nowrap
</style>
<script type="application/json">
  {
    "usingComponents": {
      "cube-time-picker": "@mpxjs/mpx-cube-ui/src/components/time-picker/index",
      "cube-button": "@mpxjs/mpx-cube-ui/src/components/button/index"
    }
  }
</script>
