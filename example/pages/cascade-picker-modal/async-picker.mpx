<template>
  <view>
    <cube-button bindclick="showPicker">async-cascade-picker</cube-button>
    <cube-cascade-picker-modal
      wx:ref="asyncPicker"
      title="{{'标题'}}"
      list="{{ dataList }}"
      selectedIndex="{{ selectedIndex }}"
      async="{{ true }}"
      bindcolumnChange="onColumnChange"
      bindconfirm="onConfirm"
    />
    <view class="event-params m-t-10">
      <view class="desc-text m-t-10 m-b-10">
        因设置 async 为true，change 事件会在用户更新数据后才相应；例子里第二例滚动时没有更新数据，所以无法点击确认
      </view>
      <block wx:if="{{ changeParams }}">
        <view class="m-b-10">change 事件参数：</view>
        <view class="value m-b-10">
          <view view class="value-item" wx:for="{{changeParams}}" wx:key="index">
            <view class="item-key">{{item[0]}}</view>
            <view class="item-value">{{item[1]}}</view>
          </view>
        </view>
      </block>
    </view>
  </view>
</template>
<script>
  import { createComponent } from '@mpxjs/core'
  import { beauty } from '../../common/utils'
  const Fruit = [{
    value: 'Fruit',
    text: 'Fruit',
    children: [{
      value: 'Apple',
      text: 'Apple',
      children: [{ value: 1, text: 'One' }, { value: 2, text: 'Two' }]
    }, {
      value: 'Orange',
      text: 'Orange',
      children: [{ value: 3, text: 'Three'}, { value: 4, text: 'Four' }]
    }]
  }, {
    value: 'Drink',
    text: 'Drink'
  }]

  const Drink = [{
    value: 'Fruit',
    text: 'Fruit'
  }, {
    value: 'Drink',
    text: 'Drink',
    children: [{
      value: 'Coffee',
      text: 'Coffee',
      children: [{ value: 1, text: 'One' }, { value: 2, text: 'Two' }]
    }, {
      value: 'Tea',
      text: 'Tea',
      children: [{ value: 1, text: 'One' }, { value: 3, text: 'Three'}]
    }]
  }]
  createComponent({
    data: {
      dataList: Fruit,
      selectedIndex: [0, 1, 1],
      changeParams: '',
    },
    methods: {
      showPicker() {
        this.confirmParams = ''
        this.$refs.asyncPicker.show()
      },
      onColumnChange(e) {
        this.changeParams = ''
        const { column, index } = e.detail
        if (column === 0) {
          this.load = true
          // 模拟1.5秒后返回数据
          setTimeout(() => {
            this.$refs.asyncPicker.updateData(index === 0 ? Fruit : Drink, [index, 0, 0])
            this.load = false
          }, 1500)
        }
      },
      onConfirm(e) {
        this.changeParams = Object.entries(e.detail)
        console.log('confirm 事件触发：')
        console.log(beauty(e.detail))
      },
    }
  })
</script>
<style lang="stylus">
.picker-demo-title
  margin-bottom: 8px
.event-params,
.demo-data
  margin-top: 10px
  .key
    margin-bottom: 10px
  .value
    margin-bottom: 20px
    white-space: break-spaces
</style>
<script type="application/json">
  {
    "usingComponents": {
      "cube-button": "@mpxjs/mpx-cube-ui/src/components/button/index",
      "cube-cascade-picker-modal": "@mpxjs/mpx-cube-ui/src/components/cascade-picker-modal/index"
    }
  }
</script>

